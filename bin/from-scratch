#! /usr/bin/env bash

printf "Setting variables\n"

set -o nounset
set -o errexit
set -o pipefail
IFS=$'\n\t'
DEBIAN_FRONTEND=noninteractive

ALCO_HOME=/srv/alco
REPOSRC=https://github.com/alcolytics/alco-bootstrap
LOCALREPO=$ALCO_HOME/alco-bootstrap

printf "Setting language params...\n"

echo -e 'LANG=en_US.UTF-8\nLC_ALL=en_US.UTF-8' | sudo tee /etc/default/locale
sudo locale-gen en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

printf "Updating system...\n"

sudo apt-get -q -y update
sudo apt-get -q -y install python-minimal python-pip python-netaddr git locales

#may be later
#sudo apt-get -q -y --force-yes upgrade
#-o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold"

sudo -H pip install pip -U
sudo -H pip install setuptools
sudo -H pip install ansible

LOCALREPO_VC_DIR=$LOCALREPO/.git
INVENTORY=$LOCALREPO/inventory/private

if [ ! -d $LOCALREPO_VC_DIR ]
then
    git clone $REPOSRC $LOCALREPO
    cd $LOCALREPO
    git submodule init
    git submodule update
else
    cd $LOCALREPO
    git pull --rebase
    git submodule init
    git submodule update --rebase --remote
fi

if [ ! -e $INVENTORY ]
then
    printf "\n\nSetup complete!\nTime to configure your installation!\nLet me generate base inventory file for you\n"
    printf "press CTRL+C to abort\n\n"
    echo "Enter your tracking domain name (for example alco.txxx.com), then [ENTER]:"
    read domain
    echo "Enter email to receive notifications about SSL certificate expiration, then [ENTER]:"
    read email

    printf "\n"
    printf "[private]\nalcostat ansible_host=$domain\n\n[private:vars]\ntracker_domain=$domain\ncontact_email=$email\n\n" | sudo tee $INVENTORY
fi

cd $LOCALREPO

printf "\nSuccess!\n\n"
printf "$ cd $LOCALREPO && ansible-playbook alcolytics.yml --connection=local\n\nThat's all\n\n"



