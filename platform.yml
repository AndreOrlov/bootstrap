---
- name: Installing platform
  hosts: rockstat
  become: yes
  vars_files:
    - /vars/config.yml
  tasks:
    - import_role:
        name: dr.server
      vars:
        drs_setup_user: yes
        drs_user: '{{support_user}}'
        drs_pub_key_file: '{{support_key_file}}'
      tags: ['os']

    - import_role:
        name: dr.docker
      vars:
        drd_users:
        - "{{support_user}}"
        drd_create_network: yes
        drd_net_name: '{{docker_net_name}}'
        drd_bind_ip: "{{docker_host_ip}}"
        drd_interface: '{{docker_interface}}'
        drd_net: '{{docker_net}}'
      tags: ['docker']
      become: yes

    - import_role:
        name: dr.exposeur
      vars:
        expo_reset_ufw: true
        expo_rules: '{{firewall_rules + priv_firewall_rules|default([]) + group_firewall_rules|default([])}}'
        expo_expose_rules: '{{expose_rules|default([]) + priv_expose_rules|default([]) + group_expose_rules|default([])}}'
      tags: ['firewall']

    - import_role:
        name: dr.letsencrypt
      vars:
        letsencrypt_domains_groups: '{{domains_ssl}}'
        letsencrypt_pause_services: ['nginx']
      tags: ssl

    - import_role:
        name: dr.static-service
      vars:
        dr_name: splash
        dr_dir: '{{dirs.splash}}'
        dr_repo: https://github.com/rockstat/splash
      tags: splash
    - import_role:
        name: jdauphant.nginx
      vars:
        nginx_official_repo: yes
        keep_only_specified: yes
        nginx_http_params: '{{cfg_nginx_http_params}}'
        nginx_sites:
          default: "{{ nginx_vhost_80die }}"
          kernel: "{{ nginx_common_params|combine(nginx_kernel_params) }}"
          grafana: "{{ nginx_common_params|combine(nginx_grafana_params) }}"
        nginx_auth_basic_files: '{{nginx_auth_basic_files}}'
        nginx_configs:
          gzip: '{{cfg_nginx_gzip_params}}'
          upstream:
            - 'upstream kernel { server {{docker_host_ip}}:{{ports.kernel}} weight=10; }'
            - 'upstream heavyload { server {{docker_host_ip}}:{{ports.heavyload}} weight=10; }'
            - 'upstream grafana { server {{docker_host_ip}}:{{ports.grafana}} weight=10; }'
            - 'upstream jupyter { server {{docker_host_ip}}:{{ports.jupyter}} weight=10; }'
            - 'upstream netdata { server {{docker_host_ip}}:{{ports.netdata}} weight=10; }'
          ssl: '{{cfg_nginx_ssl_params}}'
      tags: ['`nginx']

    - import_role:
        name: dr.netdata
      vars:
        drn_allow:
          dashboard_from: '{{netdata_from}}'
          badges_from: '{{netdata_from}}'
          conf_from: '{{netdata_conf_from}}'
          connections_from: '{{netdata_streaming_from}}'
          streaming_from: '{{netdata_streaming_from}}'
        drn_stream: '{{netdata_stream_config|default({})}}'
        drn_backend: '{{netdata_backend_config|default({})}}'
      tags: ['netdata']

    - import_role:
        name: dr.clickhouse
      vars:
        chr_users_custom: '{{clickhouse_users|default([])}}'
        chr_networks_default: ["::1", "127.0.0.1", "{{ docker_net }}"]
        chr_dbs_custom: [{name: '{{clickhouse_db}}'}]
        chr_path_data: "{{dirs.clickhouse}}"
        chr_path_tmp: "{{dirs.clickhouse_tmp}}"
      tags: ['clickhouse']


    # - import_role:
    #     name: alco-openvpn-server
    #   vars:
    #     ovpn_keys_dir: '{{covpn_keys_dir}}'
    #     ovpn_docker_net_name: '{{docker_net_name}}'
    #     ovpn_docker_network: '{{docker_network}}'
    #     ovpn_docker_netmask: '{{docker_netmask}}'
    #     ovpn_port: '{{ports.openvpn}}'
    #   tags: ['ovpn']


    - name: CHProxy setup
      block:
      - name: Creating chproxy build directory
        tempfile:
          state: directory
          suffix: build
        register: build_dir

      - name: Rendering CHProxy configs
        template:
          src: 'chproxy/{{item}}.j2'
          dest: '{{build_dir.path}}/{{item}}'
        with_items:
          - config.yml
          - Dockerfile

      - import_role:
          name: dr.docker-container
        vars:
          drdc_name: 'chproxy'
          drdc_network: '{{docker_net_name}}'
          drdc_dir: "{{build_dir.path}}"
          drdc_memory_limit: '200m'
          drdc_ports:
            - "{{docker_host_ip}}:{{ports.chproxy}}:9090"
      tags: ['chproxy']


    - import_role:
        name: dr.docker-container
      vars:
        tmp_cmd_parts: 
          - "/opt/conda/bin/conda install jupyter -y --quiet && "
          - "/opt/conda/bin/jupyter notebook --notebook-dir=/opt/notebooks"
          - "--ip='*' --port=8888 --no-browser --allow-root --NotebookApp.token=''"
        drdc_name: 'anaconda'
        drdc_image: "continuumio/anaconda3"
        drdc_network: '{{docker_net_name}}'
        drdc_memory_limit: '2g'
        drdc_cmd: "/bin/bash -c \"{{tmp_cmd_parts|join(' ')}}\""
        drdc_volumes:
          - '{{data_dir}}:/opt/notebooks'
        drdc_ports:
          - "{{docker_host_ip}}:{{ports.jupyter}}:8888"
      tags: ['anaconda']

    - name: Grafana setup
      block:
      - file:
          state: directory
          path: "{{dirs.grafana_data}}"
          owner: 472 # grafana container ids
          group: 472
      - import_role:
          name: dr.docker-container
        vars:
          drdc_name: 'grafana'
          drdc_image: "grafana/grafana"
          drdc_network: '{{docker_net_name}}'
          drdc_env:
            GF_INSTALL_PLUGINS: "{{(grafana_plugins_custom|default([]) + grafana_plugins)|join(',')}}"
            GF_AUTH_BASIC: false
            # GF_SECURITY_ADMIN_PASSWORD: secret
          drdc_memory_limit: '500m'
          drdc_volumes:
            - '{{dirs.grafana_data}}:/var/lib/grafana'
          drdc_ports:
            - "{{docker_host_ip}}:{{ports.grafana}}:3000"
      tags: ['grafana']

    - name: Heavyload setup
      block:
      - name: Creating Heavyload build directory
        tempfile:
          state: directory
          suffix: build
        register: heavyload_build

      - import_role:
          name: dr.docker-container
        vars:
          drdc_name: 'heavyload'
          drdc_network: '{{docker_net_name}}'
          drdc_env:
            WEBHOOK: "http://{{docker_host_ip}}:{{ports.kernel}}/wh/upload/nofiry"
          drdc_repo: https://github.com/rockstat/heavyload
          drdc_dir: "{{heavyload_build.path}}"
          drdc_memory_limit: '200m'
          drdc_ports:
            - "{{docker_host_ip}}:{{ports.heavyload}}:8080"
      tags: ['heavyload']

    # - import_role:
    #     name: alco-tracker
    #   vars:
    #     alco_service_bind_addr: '{{alco_docker_ip}}'
    #     alco_service_net_name: '{{alco_docker_net_name}}'
    #     alco_service_path: '{{alco_tracker_path}}'
    #     alco_service_version: '{{alco_trackers_version|default(omit)}}'
    #     alco_service_upload_store: '{{alco_data_ch_upload_dir}}'
    #     alco_service_custom_configs_dir: '{{alco_tracker_custom_config_dir}}'
    #     alco_service_log_level: '{{alco_tracker_log_level}}'
    #   tags: ['tracker']
