# Currently not working because using old docker python lib
#- name: Creating OpenVPN data volume
#  docker_volume:
#    name: '{{ovpn_docker_volume_name}}'

# Docker volume hack
- name: Check the existing docker volumes
  become: True
  shell: "python -c 'import docker; client=docker.from_env(); volumes=[_.name for _ in client.volumes.list()]; import json; print(json.dumps(volumes))'"
  changed_when: false
  register: dockervolumes

- set_fact: dockervolumeslist="{{ dockervolumes.stdout | from_json }}"

- name: Creating OpenVPN data volume
  become: True
  shell: "docker volume create {{ovpn_docker_volume_name}}"
  when: ovpn_docker_volume_name not in dockervolumeslist
# end temp hack


- name: Ensures clients keys dir exists
  file: path={{ovpn_keys_dir}} state=directory


- name: Checking server certs
  docker_container:
    name: openvpn-cmd
    image: busybox:latest
    volumes: "{{ ovpn_docker_volumes }}"
    detach: false
    cleanup: true
    command: 'test -f /etc/openvpn/pki/crl.pem'
  register: ovpn_cert_installed
  changed_when: false
  ignore_errors: true


- name: Removing old env config
  docker_container:
    name: openvpn-cmd
    image: busybox:latest
    volumes: "{{ ovpn_docker_volumes }}"
    detach: false
    cleanup: true
    command: "rm -f rm /etc/openvpn/ovpn_env.sh"


- name: Configuring OpenVPN server
  docker_container:
    name: openvpn-cmd
    recreate: yes
    pull: true
    detach: false
    cleanup: true
    image: kylemanna/openvpn
    volumes: "{{ ovpn_docker_volumes }}"
    command: "ovpn_genconfig -D -N -d -p 'route {{ovpn_docker_network}} {{ovpn_docker_netmask}}' -u {{ovpn_proto}}://{{ tracker_domain }}:{{ovpn_port}}"


- name: Generating OpenVPN server cert
  docker_container:
    name: openvpn-cmd
    detach: false
    cleanup: true
    image: kylemanna/openvpn
    volumes: "{{ ovpn_docker_volumes }}"
    env:
      EASYRSA_BATCH: 1
    command: "ovpn_initpki nopass"
  when: ovpn_cert_installed|failed


- name: Checking clients certs exists
  stat:
    path: "{{ovpn_keys_dir}}/alco_{{item}}.ovpn"
  register: keys_exists
  with_items: "{{ ovpn_users }}"


- name: Creating OpenVPN server container
  docker_container:
    name: openvpn
    hostname: openvpn
    recreate: yes
    restart: yes
    restart_policy: always
    image: kylemanna/openvpn
    volumes: "{{ ovpn_docker_volumes }}"
    purge_networks: yes
    networks:
      - name: '{{ovpn_docker_net_name}}'
    capabilities:
      - NET_ADMIN
    ports:
      - '{{ovpn_port}}:1194/{{ovpn_proto}}'

- name: Generating OpenVPN user cert
  command: "docker exec openvpn easyrsa build-client-full {{ item.item }} nopass"
  args:
    creates: '{{ovpn_keys_dir}}/alco_{{item.item}}.ovpn'
  when: not item.stat.exists
  with_items: "{{ keys_exists.results }}"
  ignore_errors: true
  no_log: True


- name: Getting OpenVPN user config
  command: "docker exec openvpn ovpn_getclient {{ item.item }}"
  register: users_cfg
  args:
    creates: "{{ovpn_keys_dir}}/alco_{{item.item}}.ovpn"
  when: not item.stat.exists
  with_items: "{{ keys_exists.results }}"
  no_log: True


- name: Saving data
  copy:
    content: "{{ users_cfg.results[item.0].stdout }}"
    dest: "{{ovpn_keys_dir}}/alco_{{item.1}}.ovpn"
    force: no
  when: not item.skipped
  with_items: "{{ users_cfg.results }}"
  no_log: True
