playbook_version: 3.0.0

# ########## Main params ##########
#version
branch: HEAD
#base
contact_email: will@be.overriden
domain: will-be-overriden.by.hostvars
domains:
  internal: 'my.{{domain}}'
  grafana: 'grafana.{{domain}}'
  jupyter: 'jupyter.{{domain}}'
  theia: 'theia.{{domain}}'
  netdata: 'netdata.{{domain}}'

#user
support_user: 'x011'
support_key_file: './public_keys/support.pub'
support_key: "{{ lookup('file', support_key_file) }}"
#dirs
home_dir: '/srv/platform'
data_dir: '{{home_dir}}/data'
build_dir: '{{home_dir}}/build'
dirs:
  kernel_custom_config: "{{data_dir}}/kernel_custom_config"
  kernel: "{{home_dir}}/kernel"
  band_collection: "{{home_dir}}/images/band_collection"
  band: "{{home_dir}}/images/band_base"
  userimg: "{{data_dir}}/images"
  grafana_data: "{{home_dir}}/grafana"
  splash: "{{home_dir}}/splash"
  clickhouse: "/srv/clickhouse"
  clickhouse_tmp: "/srv/clickhouse_tmp"
  redis: "/srv/redis"
  ovpnkeys: "{{home_dir}}/ovpn_keys"

ports:
  # services
  band: [10000, 8080]
  kernel: [10001, 8080]
  kernel_ws: [10002, 8082]
  kernel_wss: [10003, 8083]
  heavyload: [10010, 8080]
  # tools
  grafana: [3000, 3000]
  jupyter: [8888, 8888]
  theia: [8000, 8000]
  netdata: [19999]
  # servers
  http: [80]
  https: [443]
  openvpn: [8080, 1194]
  redis: [6379, 6379]
  s2svpn: [8079]
  clickhouse: [8123]
  chproxy: [9090, 9090]
  chronograf: [18888]
  influxhttp: [18086]
  influxtsb: [4242]

# ########## Docker ##########
docker_net_name: custom
docker_interface: docker1
docker_net_pattern: 172.16.25.* # will be converted to 172.16.25.0/24
docker_users: 
  - '{{support_user}}'
# calculable
docker_net: "{{docker_net_pattern|ip_p2n}}"
docker_host_ip: "{{docker_net|net_gw}}"
docker_netmask: "{{docker_net|ipaddr('netmask')}}"
docker_ipnetwork: "{{docker_net|ipaddr('network')}}"

# ########## Common Envs ##########
containers_env:
  NETWORK: "{{docker_net_name}}"
  REDIS_HOST: "redis"
  REDIS_HOST_ISOLATED: "redis"
  REDIS_PORT: "{{ports.redis.1}}"
  REDIS_DB: 2
  BAND_URL: "http://band:8080"
  KERNEL_URL: "http://kernel:8080"
  STATSD_HOST: "{{docker_host_ip}}"

# ########## Clients VPN ##########
covpn_keys_dir: '{{home_dir}}/ovpn_keys'

# ########## Server-server VPN ##########
s2s_vpn_connect: false
s2s_vpn_key: 'ovpn_keys/node{{vpn_id}}.ovpn'
s2s_vpn_net_pattern: 192.168.222.*
s2s_vpn_net: "{{s2s_vpn_net_pattern|ip_p2n}}"
s2s_vpn_host_ip: "{{s2s_vpn_net|net_gw}}"

# ########## Netdata ##########
netdata_from: 'localhost {{docker_net_pattern}} {{s2s_vpn_net}}'
netdata_streaming_from: 'localhost {{docker_net_pattern}} {{s2s_vpn_net}}'
netdata_conf_from: 'localhost'

# ########## Firewall ##########
firewall_rules:
  - { from_ip: '{{docker_net}}'}
  - { to_port: '{{ports.http.0}}'}
  - { to_port: '{{ports.https.0}}'}
  - { to_port: '{{ports.openvpn.0}}'}

# ########## SSL ##########
domains_ssl:
  - email: '{{contact_email}}'
    domains: "{{[domain]}}"
    # domains: "{{[domain] + domains.values()|list|unique}}"
  
# ########## Nginx ##########
upgr:
  - map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

ssl_tmpl: |
  ssl_certificate_key /etc/letsencrypt/live/{cert}/privkey.pem;
  ssl_certificate     /etc/letsencrypt/live/{cert}/fullchain.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{cert}/chain.pem;

nginx_vhupstr_tmpl: |
  listen 443 ssl http2;
  server_name {domain};
  proxy_pass http://{upstr};

upstreams:
  - 'upstream kernel { server {{docker_host_ip}}:{{ports.kernel.0}} weight=10; }'
  - 'upstream heavyload { server {{docker_host_ip}}:{{ports.heavyload.0}} weight=10; }'
  - 'upstream grafana { server {{docker_host_ip}}:{{ports.grafana.0}} weight=10; }'
  - 'upstream jupyter { server {{docker_host_ip}}:{{ports.jupyter.0}} weight=10; }'
  - 'upstream netdata { server {{docker_host_ip}}:{{ports.netdata.0}} weight=10; }'
  - 'upstream theia { server {{docker_host_ip}}:{{ports.theia.0}} weight=10; }'

nginx_vhbase: 
  cert: "{{domain}}"
  template: "nginx/upstream-site.conf.j2"
  domain: "{{domain}}"

sites:
  default:
    - listen 80 default_server
    - server_name _
    - return 301 https://$host$request_uri
  kernel: "{{ nginx_vhbase|combine({'uploader': True, 'root': dirs.splash}) }}"
  grafana: "{{ nginx_vhbase|combine({'domain': domains.grafana, 'htpasswd': 'auth_basic/internal'}) }}"
  theia: "{{ nginx_vhbase|combine({'domain': domains.theia, 'htpasswd': 'auth_basic/internal', 'upgrade': True }) }}"


# ########## ClickHouse ##########
clickhouse_db: stats

# ########## CHProxy ##########
# chproxy_allow_from: []
chproxy_allow_from_default:
  - 127.0.0.0/24
  - 172.16.0.0/16
chproxy_def_max_concurrent_queries: 5
chproxy_def_max_queue_size: 100
chproxy_def_max_queue_time: 30s
chproxy_def_max_execution_time: 30s
chproxy_def_allow_cors: true
# chproxy_users: []
chproxy_users_default:
  - name: "{{chproxy_zero_user|default('default')}}"
    password: "{{chproxy_zero_password|default('default')}}"
    to_cluster: "{{'default'}}"
    to_user: "{{'default'}}"
# chproxy_clusters: []
chproxy_clusters_default:
  - name: "{{'default'}}"
    nodes:
      - '{{docker_host_ip}}:{{ports.clickhouse.0}}'

# Mailer config
#mailgun_api_key: ключ
#mailgun_sender: <Rockstat Setup <robot@mail.yourdomain.com>

